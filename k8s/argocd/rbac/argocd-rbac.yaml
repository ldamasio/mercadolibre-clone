---
# ServiceAccount para ArgoCD gerenciar deployments
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-manager
  namespace: argocd
---
# ClusterRole para ArgoCD - Permissões necessárias para gerenciar aplicações
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-manager-role
rules:
  # Gerenciar workloads
  - apiGroups: ["apps", "extensions"]
    resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Gerenciar serviços e networking
  - apiGroups: [""]
    resources: ["services", "endpoints", "pods", "configmaps", "secrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "networkpolicies"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Istio resources
  - apiGroups: ["networking.istio.io"]
    resources: ["virtualservices", "destinationrules", "gateways", "serviceentries"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Cert-manager
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # HPA
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Jobs e CronJobs
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# ClusterRoleBinding para ArgoCD
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-manager-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-manager-role
subjects:
  - kind: ServiceAccount
    name: argocd-manager
    namespace: argocd
  - kind: ServiceAccount
    name: argocd-application-controller
    namespace: argocd
  - kind: ServiceAccount
    name: argocd-server
    namespace: argocd
---
# Role específica para o namespace mercadolibre
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-mercadolibre-role
  namespace: mercadolibre
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
# RoleBinding no namespace mercadolibre
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-mercadolibre-binding
  namespace: mercadolibre
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-mercadolibre-role
subjects:
  - kind: ServiceAccount
    name: argocd-manager
    namespace: argocd
  - kind: ServiceAccount
    name: argocd-application-controller
    namespace: argocd
---
# ConfigMap para políticas RBAC do ArgoCD (UI e API)
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-rbac-cm
  namespace: argocd
data:
  policy.default: role:readonly
  policy.csv: |
    # Admins têm acesso total
    p, role:admin, applications, *, */*, allow
    p, role:admin, clusters, *, *, allow
    p, role:admin, repositories, *, *, allow
    p, role:admin, logs, get, */*, allow
    p, role:admin, exec, create, */*, allow
    
    # Developers podem ver e sincronizar apps
    p, role:developer, applications, get, */*, allow
    p, role:developer, applications, sync, */*, allow
    p, role:developer, applications, action/*, */*, allow
    p, role:developer, logs, get, */*, allow
    
    # Readonly users podem apenas visualizar
    p, role:readonly, applications, get, */*, allow
    p, role:readonly, repositories, get, *, allow
    
    # Bindings
    g, argocd-admins, role:admin
    g, developers, role:developer
  scopes: '[groups]'
  