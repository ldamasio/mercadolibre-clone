---
# ServiceAccount para o Backend
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-sa
  namespace: mercadolibre
  labels:
    app: backend
---
# ServiceAccount para o Frontend
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-sa
  namespace: mercadolibre
  labels:
    app: frontend
---
# Role para o Backend - Permissões mínimas necessárias
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: backend-role
  namespace: mercadolibre
rules:
  # Permite ler ConfigMaps para configurações
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  # Permite ler Secrets (mas não criar/modificar)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  # Permite ler informações sobre pods (para service discovery)
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "list", "watch"]
---
# Role para o Frontend - Permissões ainda mais restritas
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: frontend-role
  namespace: mercadolibre
rules:
  # Permite apenas ler ConfigMaps específicos
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["frontend-config", "app-config"]
    verbs: ["get"]
---
# RoleBinding para o Backend
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backend-rolebinding
  namespace: mercadolibre
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: backend-role
subjects:
  - kind: ServiceAccount
    name: backend-sa
    namespace: mercadolibre
---
# RoleBinding para o Frontend
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: frontend-rolebinding
  namespace: mercadolibre
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: frontend-role
subjects:
  - kind: ServiceAccount
    name: frontend-sa
    namespace: mercadolibre
---
# NetworkPolicy para isolar os pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-network-policy
  namespace: mercadolibre
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Permite tráfego do frontend
    - from:
        - podSelector:
            matchLabels:
              app: frontend
      ports:
        - protocol: TCP
          port: 8080
    # Permite tráfego do Istio
    - from:
        - namespaceSelector:
            matchLabels:
              name: istio-system
      ports:
        - protocol: TCP
          port: 8080
    # Permite health checks
    - from:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: TCP
          port: 8080
  egress:
    # Permite DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53
    # Permite acesso a serviços externos (se necessário)
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 169.254.169.254/32  # Block metadata service
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80
---
# NetworkPolicy para o Frontend
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-network-policy
  namespace: mercadolibre
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Permite tráfego do Ingress/Istio Gateway
    - from:
        - namespaceSelector:
            matchLabels:
              name: istio-system
      ports:
        - protocol: TCP
          port: 3000
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 3000
  egress:
    # Permite acessar o backend
    - to:
        - podSelector:
            matchLabels:
              app: backend
      ports:
        - protocol: TCP
          port: 8080
    # Permite DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53
